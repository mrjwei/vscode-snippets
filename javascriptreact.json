{
  "Print to console": {
    "prefix": "log",
    "body": [
      "console.log('$1');",
      "$2"
    ],
    "description": "Print output to console"
  },
  "Arrow function": {
    "prefix": "ff",
    "body": [
      "const ${1:name} = ($2) => {",
      "\t$3",
      "}",
      "$0"
    ]
  },
  "Export function": {
    "prefix": "exf",
    "body": [
      "export const ${1:name} = (${3}) => {",
      "\t$2",
      "}",
      "$0"
    ]
  },
  "Anonymous Function": {
    "prefix": ">",
    "body": [
      "($2) => {",
      "\t$1",
      "}",
      "$0"
    ]
  },
  "Create component": {
    "prefix": "comp",
    "body": [
      "import React from 'react'",
      "",
      "export function ${1:name}({$2}: $3) {",
      "\treturn (",
      "\t\t$4",
      "\t)",
      "}",
      "$0"
    ]
  },
  "Create default component": {
    "prefix": "dcomp",
    "body": [
      "import React from 'react'",
      "",
      "export default function ${1:name}({$2}: $3) {",
      "\treturn (",
      "\t\t$4",
      "\t)",
      "}",
      "$0"
    ]
  },
  "useState": {
    "prefix": "us",
    "body": "const [${1:state}, set${1/(.*)/${1:/capitalize}/}] = React.useState($0)"
  },
  "useEffect": {
		"prefix": "ue",
		"body": [
			"useEffect(() => {",
			"\t$0",
			"}, [$1])"
		],
		"description": "my useEffect"
	},
  "Self-closing Tag": {
    "prefix": "/",
    "body": "<$0/>"
  },
  "Request Methods": {
    "prefix": "method",
    "body": [
      "app.${1|get,post,put,delete|}('${2:path}', (req, res) => {",
      "  res.send('${3:response}');",
      "});"
    ]
  },
  "File Header": {
    "prefix": "header",
    "body": [
      "/**",
      " * File: ${TM_FILENAME}",
      " * Author: Jesse",
      " * Created: ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}",
      " */",
      "$0"
    ]
  },
  "Arrow Function": {
    "prefix": "fn",
    "body": [
      "const ${1:name} = (${2:args}) => {",
      "\t$0",
      "}"
    ]
  },
  "Traditional Function": {
    "prefix": "fn",
    "body": [
      "function ${1:name}(${2:args}) {",
      "\t$0",
      "}"
    ]
  },
  "Test Boilerplate": {
    "prefix": "dit",
    "body": [
      "describe('${1:TestSuiteName}', () => {",
      "\t$3",
      "\tit('${2:TestCaseName}', () => {",
      "\t\t$0",
      "\t})",
      "})"
    ]
  }
}
